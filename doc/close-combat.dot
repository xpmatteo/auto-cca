digraph CloseCombat {
  start -> def0Evasion [label="if def0 can evade"]
  start -> closeCombat [label="if def0 cannot evade"]

  closeCombat -> momentumAdvance  [label="def0\nkilled"]
  closeCombat -> def0Retreat [label="flags"]
  closeCombat -> defBattleBack [label="def0\nnot killed"]
  
  def0Evasion -> end0 [label="def0 evades"]
  def0Evasion -> closeCombat [label="def0 stays"]
    
  momentumAdvance -> startBonusCombat [label="att is cavalry\nor is warrior\nor has leader"]
  momentumAdvance -> end1 [label="att stays"]
  momentumAdvance -> bonusAdvance [label="att is cavalry"]

  bonusAdvance -> startBonusCombat
  
  def0Retreat -> defBattleBack [label="def0\nignores flags"]
  def0Retreat -> momentumAdvance [label="def0\nretreats"]

  defBattleBack -> end2 [label="else"]
  defBattleBack -> attackerRetreat [label="flags"]
  
  attackerRetreat -> end3

  startBonusCombat -> end4 [label="att. chooses\nnot to fight"] 
  startBonusCombat -> def1evasion [label="def1 can evade"]
  startBonusCombat -> bonusCombat [label="def1 cannot evade"]

  bonusCombat -> finalAdvance  [label="def1 killed"]
  bonusCombat -> def1Retreat [label="flags"]
  bonusCombat -> defBattleBack [label="def1 not killed"]
  
  def1evasion -> end5 [label="def1 evades"]
  def1evasion -> bonusCombat  [label="def1 stays"]

  def1Retreat -> finalAdvance [label="def1\nretreats"]
  def1Retreat -> defBattleBack [label="def1 ignores flags"]
}
